import React, { useEffect, useState } from "react";
import { motion, AnimatePresence } from "framer-motion";
import { StarIcon } from "lucide-react";

// Mensajes motivacionales que cambian cada 6s
function DynamicMotivationalMessage() {
    const messages = [
        "A veces lo bueno tarda un poquito m√°s ‚ú®",
        "Recargando buenas vibras‚Ä¶",
        "¬°Casi, casi, no te vayas! üöÄ",
        "La paciencia tambi√©n suma puntos üòâ",
        "Estamos preparando tu mejor experiencia‚Ä¶",
        "Deja que la magia suceda‚Ä¶ ‚≠êÔ∏è",
        "Nos tomamos nuestro tiempo para hacerlo genial üòé",
        "¬øSab√≠as que esperar tambi√©n es parte del viaje? üõ§Ô∏è",
        "Respira hondo‚Ä¶ ¬°ya casi llegamos! üå¨Ô∏è",
        "Un poco de paciencia = muchos buenos momentos üî•",
        "¬°Preparando las mejores conexiones para ti! üåê",
        "Tu comunidad est√° a punto de crecer üíô",
        "Cargando buenas energ√≠as‚Ä¶ üîã",
        "¬°Esto valdr√° la pena! Conf√≠a üòâ",
        "¬°Listos para brillar juntos! ‚ú®",
        "Reuniendo opiniones aut√©nticas‚Ä¶",
        "¬°No te muevas! Algo incre√≠ble est√° por pasar üö¶",
        "¬øT√∫ tambi√©n sientes la emoci√≥n? Nosotros s√≠ üòÅ",
        "¬°Aguanta un pel√≠n m√°s, porfa! üôè",
        "¬øSab√≠as que cada estrella es √∫nica? La tuya tambi√©n ‚≠êÔ∏è",
        "¬°MeetBack est√° calentando motores! üèÅ",
        "A veces, el mejor scroll empieza con una espera üòè",
        "¬øUn mini break para pensar en algo bonito? üåà",
        "Tu momento est√° por comenzar‚Ä¶ ‚è≥",
        "Cargando comunidad, cargando confianza‚Ä¶",
    ];

    const [index, setIndex] = React.useState(0);

    useEffect(() => {
        const interval = setInterval(() => setIndex(i => (i + 1) % messages.length), 6000);
        return () => clearInterval(interval);
    }, []);

    return (
        <AnimatePresence mode="wait">
            <motion.p
                key={index}
                className="text-[#8ecfff] text-lg mt-1 mb-6 min-h-[2.5rem] text-center"
                initial={{ opacity: 0, y: 8 }}
                animate={{ opacity: 1, y: 0 }}
                exit={{ opacity: 0, y: -8 }}
                transition={{ duration: 0.4 }}
            >
                {messages[index]}
            </motion.p>
        </AnimatePresence>
    );
}

const steps = [
    {
        title: "Cargando...",
        showMotivation: false,
        bar: 33
    },
    {
        title: "Estamos preparando todo para ti‚Ä¶",
        showMotivation: false,
        bar: 50
    },
    {
        title: "Parece que estamos reiniciando el servidor‚Ä¶",
        showMotivation: true,
        bar: 66
    }
];

export default function Loading() {
    const [step, setStep] = useState(0);

    useEffect(() => {
        const timers = [
            setTimeout(() => setStep(1), 5000),
            setTimeout(() => setStep(2), 10000),
        ];
        return () => timers.forEach(clearTimeout);
    }, []);

    return (
        <div className="flex flex-col items-center justify-center min-h-dvh" aria-busy="true" aria-live="polite">
            <motion.div
                className="flex flex-col items-center justify-center p-8 w-full"
                initial={{ opacity: 0, scale: 0.98, y: 32 }}
                animate={{ opacity: 1, scale: 1, y: 0 }}
                transition={{ duration: 0.6, ease: [0.4, 0.15, 0.3, 1] }}
            >
                {/* Logo animado */}
                <motion.span
                    className="block text-7xl text-[#2ecbff] mb-6"
                    animate={{
                        rotate: [0, 360],
                        filter: [
                            "drop-shadow(0 0 12px #2ecbff90)",
                            "drop-shadow(0 0 24px #2ecbffb0)",
                            "drop-shadow(0 0 12px #2ecbff90)"
                        ],
                        scale: [1, 1.12, 1]
                    }}
                    transition={{
                        rotate: { repeat: Infinity, duration: 12, ease: "linear" },
                        filter: { repeat: Infinity, duration: 2.2, ease: "easeInOut" },
                        scale: { repeat: Infinity, duration: 2.2, ease: "easeInOut" }
                    }}
                >
                    <StarIcon size={64} />
                </motion.span>

                {/* Mensaje principal animado */}
                <AnimatePresence mode="wait">
                    <motion.h2
                        key={step}
                        className="text-blue-900 text-2xl font-semibold mb-2 text-center min-h-[2.5rem]"
                        initial={{ opacity: 0, y: 8 }}
                        animate={{ opacity: 1, y: 0 }}
                        exit={{ opacity: 0, y: -8 }}
                        transition={{ duration: 0.3 }}
                    >
                        {steps[step].title}
                    </motion.h2>
                </AnimatePresence>

                {/* Mensaje motivacional solo en el paso 2 */}
                {steps[step].showMotivation ? (
                    <DynamicMotivationalMessage />
                ) : (
                    <div className="min-h-[2.5rem] mb-6" />
                )}

                {/* Barra de carga con animaci√≥n de ancho */}
                <>
                    <motion.div
                        className="h-full bg-[#2ecbff] rounded-full"
                        animate={{ width: `${steps[step].bar}%` }}
                        transition={{ duration: 0.8, ease: [0.4, 0.15, 0.3, 1] }}
                    />
                </>
            </motion.div>
        </div >
    );
}
